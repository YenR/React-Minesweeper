{"version":3,"sources":["index.js"],"names":["SizeForm","props","_this","Object","C_Users_Y_react_minesweeper_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_Y_react_minesweeper_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Y_react_minesweeper_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","value","handleChange","bind","C_Users_Y_react_minesweeper_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleSubmit","event","setState","target","preventDefault","onFinish","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","onSubmit","onChange","type","React","Component","Square","className","onClick","Board","x","y","_this2","key","toString","squares","e","onContextMenu","_this3","Array","apply","length","map","Number","i","j","renderSquare","Game","_this4","bombs","clickMode","renderinit","lost","checkIfWon","slice","recurse","b","handleClick","size","console","log","numberBombs","s","m","l","xl","_sizes$size","C_Users_Y_react_minesweeper_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","fill","Math","floor","random","table","_this5","initiateBoard","toggleButton","clickToggle","restartButton","clickRestart","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bd6ddb9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass SizeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: 's'};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        //console.log('Selected size: ' + this.state.value);\r\n        event.preventDefault();\r\n        this.props.onFinish(this.state.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Pick the size of the mine field:\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"s\">small (10x10)</option>\r\n                        <option value=\"m\">medium (15x15)</option>\r\n                        <option value=\"l\">large (20x20)</option>\r\n                        <option value=\"xl\">huge (50x25)</option>\r\n                    </select>\r\n                </label>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className ={props.className} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    // normal square\r\n    renderSquare(x,y) {\r\n      return (<Square\r\n          className={\"square\"}\r\n          key={x.toString() + ',' + y.toString()}\r\n          value={this.props.squares[x][y]}\r\n          onClick = {(e) => this.props.onClick(x,y,e)}\r\n          onContextMenu = {(e) => this.props.onClick(x,y,e)}\r\n      />);\r\n    }\r\n\r\n    render() {\r\n\r\n        let x = this.props.x;\r\n        let y = this.props.y;\r\n\r\n        return (\r\n            <div key ={'mainboard'}>\r\n            {\r\n                Array.apply(null, {length: x}).map(Number.call, Number).map((i) => {\r\n                    return(\r\n                        <div className=\"board-row\" key={'board' + i}>\r\n                        {\r\n                            Array.apply(null, {length: y}).map(Number.call, Number).map( (j) => {\r\n                                return this.renderSquare(i, j);\r\n                            })\r\n                        }\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n\r\n            squares: null,\r\n            x : 0,\r\n            y : 0,\r\n            bombs: null,\r\n            clickMode: true, // true => try, false => flag\r\n            renderinit: true,\r\n            lost: false,\r\n        }\r\n    }\r\n\r\n    handleClick(x,y,e)\r\n    {\r\n        //e.preventDefault();\r\n\r\n        if(this.state.lost || checkIfWon(this.state.squares))\r\n            return;\r\n\r\n        const squares = this.state.squares.slice();\r\n        const bombs = this.state.bombs;\r\n\r\n        let recurse = false;\r\n\r\n        if(!squares[x][y])\r\n        {\r\n            if(!this.state.clickMode) // e.button === 3||\r\n            {\r\n                squares[x][y] = '🚩';\r\n            }\r\n            else\r\n            {\r\n                if(bombs[x][y] === '💣')\r\n                {\r\n                    squares[x][y] = '💣';\r\n                    this.setState({lost: true});\r\n                }\r\n                else squares[x][y] = bombs[x][y];\r\n                if(squares[x][y] === 0)\r\n                    recurse = true;\r\n            }\r\n        }\r\n        else if(squares[x][y] === '🚩')\r\n        {\r\n            squares[x][y] = null;\r\n        }\r\n\r\n        this.setState({squares: squares,});\r\n\r\n        if(recurse)\r\n        {\r\n            let a = x;\r\n            let b = y;\r\n            if(a>0)\r\n            {\r\n                if(squares[a-1][b] === null)\r\n                    this.handleClick(a-1, b, null);\r\n                if(b>0 && squares[a-1][b-1] === null)\r\n                    this.handleClick(a-1, b-1, null);\r\n                if(b<this.state.y-1 && squares[a-1][b+1] === null)\r\n                    this.handleClick(a-1, b+1, null);\r\n            }\r\n            if(a<this.state.x-1)\r\n            {\r\n                if(squares[a+1][b] === null)\r\n                    this.handleClick(a+1, b, null);\r\n                if(b>0 && squares[a+1][b-1] === null)\r\n                    this.handleClick(a+1, b-1, null);\r\n                if(b<this.state.y-1 && squares[a+1][b+1] === null)\r\n                    this.handleClick(a+1, b+1, null);\r\n            }\r\n            if(b > 0 && squares[a][b-1] === null)\r\n                this.handleClick(a, b-1, null);\r\n            if(b < this.state.y-1 && squares[a][b+1] === null)\r\n                this.handleClick(a, b+1, null);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * toggles between sorting history in descending or ascending order\r\n     */\r\n    clickToggle()\r\n    {\r\n        this.setState({clickMode: !this.state.clickMode});\r\n        //console.log(\"toggled to: \" + this.state.toggle);\r\n    }\r\n\r\n    clickRestart()\r\n    {\r\n        this.setState({squares: null,\r\n            x : 0,\r\n            y : 0,\r\n            bombs: null,\r\n            clickMode: true, // true => try, false => flag\r\n            renderinit: true,\r\n            lost: false,\r\n        });\r\n    }\r\n\r\n    initiateBoard(size)\r\n    {\r\n        console.log('initiating with board size ' + size);\r\n        this.setState({renderinit: false});\r\n\r\n        const sizes = {\r\n            s : [10,10],\r\n            m : [15,15],\r\n            l : [20,20],\r\n            xl: [25,50],\r\n        };\r\n\r\n        const numberBombs = {\r\n            s : 10,\r\n            m : 24,\r\n            l : 50,\r\n            xl: 150,\r\n        }\r\n\r\n        let x,y;\r\n        [x,y] = sizes[size];\r\n\r\n        var squares = new Array(x).fill(0).map(() => new Array(y).fill(null));\r\n        var bombs = new Array(x).fill(0).map(() => new Array(y).fill(0));\r\n\r\n        // fill field with mines\r\n        for(let i=0; i < numberBombs[size]; i++)\r\n        {\r\n            let a = Math.floor(Math.random() * x);\r\n            let b = Math.floor(Math.random() * y);\r\n\r\n            //increase numbers in surrounding fields\r\n            if(bombs[a][b] !== '💣')\r\n            {\r\n                bombs[a][b] = '💣';\r\n\r\n                if(a>0)\r\n                {\r\n                    if(bombs[a-1][b] !== '💣')\r\n                        bombs[a-1][b]++;\r\n                    if(b>0 && bombs[a-1][b-1] !== '💣')\r\n                        bombs[a-1][b-1]++;\r\n                    if(b<y-1 && bombs[a-1][b+1] !== '💣')\r\n                        bombs[a-1][b+1]++;\r\n                }\r\n                if(a<x-1)\r\n                {\r\n                    if(bombs[a+1][b] !== '💣')\r\n                        bombs[a+1][b]++;\r\n                    if(b>0 && bombs[a+1][b-1] !== '💣')\r\n                        bombs[a+1][b-1]++;\r\n                    if(b<y-1 && bombs[a+1][b+1] !== '💣')\r\n                        bombs[a+1][b+1]++;\r\n                }\r\n                if(b > 0 && bombs[a][b-1] !== '💣')\r\n                    bombs[a][b-1]++;\r\n                if(b < y-1 && bombs[a][b+1] !== '💣')\r\n                    bombs[a][b+1]++;\r\n            }\r\n            else\r\n            {\r\n                //console.log('else!')\r\n                i--;\r\n            }\r\n        }\r\n\r\n        console.table(bombs)\r\n\r\n        this.setState({\r\n            x: x,\r\n            y: y,\r\n            squares: squares,\r\n            bombs: bombs,\r\n        });\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.state.renderinit)\r\n            return (<div className=\"select-board\">\r\n                        <SizeForm\r\n                            onFinish = {(size) => this.initiateBoard(size)}\r\n                        />\r\n                    </div>);\r\n\r\n        const toggleButton = <button onClick={() => this.clickToggle()}>{\r\n            \"Mode: \" + (this.state.clickMode ? \"⌖\" : \"🚩\")}\r\n        </button>;\r\n\r\n\r\n        let restartButton = null;\r\n\r\n        if(this.state.lost)\r\n        {\r\n            restartButton = <button onClick={() => this.clickRestart()}>{\"Restart\"}</button>;\r\n        }\r\n\r\n        if(checkIfWon(this.state.squares))\r\n        {\r\n            restartButton = <button onClick={() => this.clickRestart()}>{\"😎 Restart 😎\"}</button>;\r\n        }\r\n\r\n        return (\r\n          <div className=\"game\">\r\n            <div className=\"game-board\">\r\n              <Board\r\n                squares = {this.state.squares}\r\n                bombs = {this.state.bombs}\r\n                x = {this.state.x}\r\n                y = {this.state.y}\r\n                onClick = {(x,y,e) => this.handleClick(x,y,e)}\r\n              />\r\n            </div>\r\n              <span>&nbsp;&nbsp;</span>\r\n              <div>{toggleButton}</div>\r\n              <div>{restartButton}</div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction checkIfWon(squares)\r\n{\r\n    for(let i of squares)\r\n        for(let j of i)\r\n        {\r\n            if(j === null || j === '💣')\r\n                return false;\r\n        }\r\n    return true;\r\n\r\n}"],"sourceRoot":""}